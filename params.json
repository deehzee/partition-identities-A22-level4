{"name":"Partition-identities-a22-level4","tagline":"Computer programs used in my PhD thesis: \"Partition identities arsing from the standard A(2)2-modules of level 4.\"","body":"# Programs used in \"Partition identities arising from standard A(2)2-modules of level 4\"\r\n\r\nThese are the computer programs used in my PhD thesis: \r\n\"Partition identities arsing from the standard \r\nA(2)2-modules of level 4\" (Rutgers University). The \r\nabstract and the introduction of the above thesis are\r\nincluded in `thesisAbsIntro.pdf`.\r\n\r\nA *partition* of a nonnegative integer *n* into *k* parts \r\nis a non-increasing *k*-tuple (*p_1, ..., p_k*) of \r\nnonnegative integers such that \r\n```\r\n\tn = p_1 + ... + p_k.\r\n```\r\nThe number *n* will be referred to as the *size* of the \r\npartition. The number *k* is referred to as the *length* \r\nof the partition. And the entries *p_1*, ..., *p_k* are \r\ncalled the *parts* of the partition.\r\n\r\nA partition *(p_1, ..., p_k)* is said to satisfy a \r\ndifference condition *[d_1, ...,d_\\{k−1\\}]* if\r\n*p_i − p_\\{i+1\\} = d_i* for all *i* such that \r\n_1 ≤ i ≤ (k−1)_.\r\n\r\nFor example, the partition _(7,2)_ satisfies the \r\ndifference condition _[5]_. The partition _(11,8,8)_ \r\nsatisfies the difference condition _[3,0]_, and so on.\r\n\r\nSome times, we may use an `*` (asterisk) on an entry of the \r\ndifference condition to denote *zero* or *more* occurrence \r\nof that entry. For example, consider the difference \r\ncondition _[3,2\\*,3,0]_. This may be expanded into the \r\nfollowing difference conditions: _[3,3,0]_, _[3,2,3,0]_, \r\n_[3,2,2,3,0]_, ... and so on.\r\n\r\n\r\nThe three partition identities we proposed --- arising from the three inequivalent standard modules of level 4 for the affine Lie algebra A(2)2 --- may be stated as follows.\r\n\r\n+ __(4,0)-module__:\r\nThe number of partitions of a nonnegative integer _n_ into \r\nparts different from _1_ and such that there is no \r\nsub-partition satisfying the difference\r\nconditions _[1], [0,0], [0,2], [2,0]_ or _[0,3]_, \r\nand such that there is no sub-partition with an odd sum \r\nof parts satisfying the difference conditions \r\n_[3,0]_, _[0,4]_, _[4,0]_ or _[3,2\\*,3,0]_\r\n(where _2*_ indicates zero or more occurrence of _2_), \r\nis the same as the number of partitions of _n_ into parts \r\ncongruent to _±2_, _±3_ or _±4_ modulo _14_.\r\n\r\n+ __(2,1)-module__:\r\nThe number of partitions of a nonnegative integer _n_ such \r\nthat _1_, _2_ and _3_ may occur at most once as a part, and \r\nsuch that there is no sub-partition satisfying the \r\ndifference conditions _[1]_, _[0,0]_, _[0,2]_, _[2,0]_ or \r\n_[0, 3]_, and such that there is no sub-partition with an \r\nodd sum of parts satisfying the difference conditions \r\n_[3,0]_, _[0,4]_, _[4,0]_ or _[3,2*,3,0]_ \r\n(where _2\\*_ indicates zero or more occurrence of _2_), \r\nis the same as the number of partitions of _n_ into parts\r\ncongruent to _±1_, _±4_ or _±6_ modulo _14_.\r\n\r\n+ __(0,2)-module__:\r\nThe number of partitions of a nonnegative integer _n_ into \r\nparts different from _1_ and _3_, such that _2_ may occur \r\nat most once as a part, and such that there is no \r\nsub-partition satisfying the difference condition \r\n_[3,2\\*]_ (where _2*_ denotes zero or more occurrence of \r\n_2_) ending with a _2_, and such that there is no \r\nsub-partition satisfying the difference conditions _[1]_, \r\n_[0,0]_, _[0,2]_, _[2,0]_ or _[0,3]_, and such that there \r\nis no sub-partition with an odd sum of parts satisfying the \r\ndifference conditions _[3,0]_, _[0,4]_, _[4,0]_ or \r\n_[3,2\\*,3,0]_, is the same as the number of partitions of \r\n_n_ into parts congruent to _±2_, _±5_ or _±6_ modulo _14_.\r\n\r\n\r\nThe codes are divided into three sections, corresponding to \r\nthe appendices of the thesis.\r\n\r\n## A: Maple programs used in the computation of relations\r\n\r\n__Directory `maples/rels`:__ \r\nThe directory containing the Maple codes, used in the \r\ncomputation of the relations.\r\n\r\n+ __File `rels.mw`:__ The Maple worksheet showing\r\nthe computations.\r\n\r\n+ __File `cha.txt`:__ The maple codes to generate\r\nthe partitions of a nonnegative integer _n_ into\r\n_k_ parts (based on [[Cha11]](http://support.csis.pace.edu/CSISWeb/docs/techReports/techReport280.pdf)).\r\n\r\n+ __File `coef.txt`:__ The maple codes to compute the\r\ncoefficients of various \"standard monomials\" in various\r\n\"product generating functions.\"\r\n\r\n+ __File `test.txt`:__ Varous maple codes to automate\r\nthe analysis of various deg 2 and deg 3 relations.\r\n\r\n\r\n\r\n## B: Computation in noncommutative algebra\r\n\r\n__Directory `maple/noncomm`:__\r\nThe directory containing the computations related\r\nto straightening out and substitution of non-commuting\r\nvariables.\r\n\r\n+ __File `isom.mw`:__\r\nThe Maple worksheet showing the verification of the\r\nisomorphism of the affine Lie algebra A(2)2 in terms of\r\nthe vertex operators.\r\n\r\n+ __File `ini-A22-L4.mw`:__\r\nThe Maple worksheet showing the computations needed to\r\nprove the initial conditions for the three level 4 \r\nstandard modules for A(2)2.\r\n\r\n+ __File `npolyio.txt`:__\r\nThe Maple codes to convert polynomials in non-commuting\r\nvariables into the list representation and vice versa.\r\nBased on \r\n[D. Zeilberger](http://www.math.rutgers.edu/~zeilberg/)'s [NCFPS maple](http://www.math.rutgers.edu/~zeilberg/tokhniot/NCFPS) package.\r\n\r\n+ __File `npolyops.txt`:__\r\nThe file implementing operations on polynomials with\r\nnon-commuting variables. This file is slight modification\r\nof Zeilberger's [NCFPS maple package](http://www.math.rutgers.edu/~zeilberg/tokhniot/NCFPS).\r\n\r\n+ __File `npolysubs.txt`:__\r\nThe Maple codes to substitute and rewrite a noncommutative\r\npolynomials based on substitution rules. The algorithm\r\nand codes are modification of [M. Russell](http://www.math.rutgers.edu/russell2)'s code (see [[Rus13]](http://arxiv.org/abs/1311.1141v2)). \r\nIt has been modified to accommodate indexed (infinitely\r\nmany) variables and infinitely many rules (indexed),\r\ninstead of finitely many variables and finitely many\r\nrules.\r\n\r\n+ __File `A22-rules.txt`:__\r\nThe maple codes implementing various rules related to\r\nthe Lie brakcets in A(2)2 and various straightening out\r\nrules for the standard modules for A(2)2.\r\n\t\r\n+ __File `A22-L4-iniRules.txt`:__\r\nThe maple codes implementing various rules corresponding\r\nto the initial conditions as discovered in the Maple\r\nworksheet `maple/noncomm/ini-A22-L4.mw`.\r\n\t\r\n+ __File `misc.txt`:__\r\nMiscellaneous maple codes used in the Maple worksheet\r\n`maple/noncomm/ini-A22-L4.mw`.\r\n\t\r\nThis directory also contains the Maple worksheet file\r\n`A22-level4-grdim.mw`, that computes the graded \r\ndimension for _n_ upto 200, using power series expansion.\r\nThe results have been copied to `c/verify/data.h`\r\nto verify the identities.\r\n\r\n## C: Verification of the partition identities\r\n\r\n__Directory `c/verify`:__\r\nThe directory containing the C program to verify the\r\nthree proposed partition identities.\r\n\r\n+ __File `verify.c`:__\r\nThe C program to verify the partition identities\r\n(upto _n=200_). It generates the partitions (in \r\nascending order) using Kelleher's \r\n_accelerated ascending rule_ algorithm\r\n(see [[Kel06]](http://jeromekelleher.net/downloads/k06.pdf))\r\nOnce a partition\r\nis generated, then it is scanned to see if it is reducible\r\nor not for each of the three standard modules of level 4\r\nfor A(2)2.\r\n\r\n+ __File `data.h`:__\r\nThe header file containing the data about the graded\r\ndimensions of the three standard modules for A(2)2\r\nof level 4. The data were computed in the Maple\r\nworksheet `maple/A22-level4-grdim.mw`.\r\n\r\nTo compile and run:\r\n```\r\n\t$ cc -std=c99 verify.c\r\n\t$ ./a.out\r\n```\r\n\r\nThe program will ask for the _starting_ and _ending_\r\nvalue of _n_. Then it will output the result of the\r\ncomputations for these values. Note that, it takes more\r\nthan a day to verify the partition identities for\r\n_n = 200_.\r\n\r\n## References\r\n\r\n[[Cha11]](http://support.csis.pace.edu/CSISWeb/docs/techReports/techReport280.pdf) S.-H. Cha, _Recursive algorithm for generating partitions of an integer_, tech. rep. 280, Pace University, Seidenberg School of Computer Science and\r\nInformation Systems, 2011.\r\n\r\n[[Kel06]](http://jeromekelleher.net/downloads/k06.pdf)\r\nJ. Kelleher, “Encoding partitions as ascending compositions,” PhD thesis,\r\nUniversity College Cork, 2006.\r\n\r\n[[NCFPS]](http://www.math.rutgers.edu/~zeilberg/tokhniot/NCFPS)\r\nD. Zeilberger, _Noncommutative formal power series Maple package_, http://www.math.rutgers.edu/~zeilberg/tokhniot/NCFPS.\r\n\r\n[[Rus13]](http://arxiv.org/abs/1311.1141v2) M. C. Russell, “Noncommutative recursions and the Laurent phenomenon,”\r\narXiv preprint arXiv:1311.1141v2 (2013), url: http://arxiv.org/abs/\r\n1311.1141v2.\r\n\r\n[[Russell]](http://www.math.rutgers.edu/~russell2)\r\nHomepage of M. C. Russell:  http://www.math.rutgers.edu/~russell2\r\n\r\n[[Zeilberger]](http://www.math.rutgers.edu/~zeilberg) Homepage of D. Zeilberger: http://www.math.rutgers.edu/~zeilberg\r\n\r\n.\r\n\r\n\r\n.","google":"UA-59107703-1","note":"Don't delete this file! It's used internally to help with page regeneration."}